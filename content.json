{"pages":[{"title":"Charles Du","text":"Hello Everyone.","link":"/about/index.html"},{"title":"","text":"","link":"/categories/index.html"}],"posts":[{"title":"Hexo Tutorial 入门设置","text":"前言2020年的新年真的亲身感受了渡日如“年”。在家憋了5天之后，任凭怎么下拉刷新也刷不出各个社交平台的新内容了🤣 既然闲着也是闲着，不如从头搭建一个静态个人博客吧！这里选择Hexo作为构建静态博客的框架来搭建。之前也尝试过Jekyll，但是感觉社区还有皮肤都没有Hexo丰富，不如就推倒重新搭建一套。 在尝试Hexo的搭建也踩了一些坑，这里也同时分享一下解决办法给大家参考一下😀 环境配置这里我主要以我个人的环境来作为说明： 123MacOSNodeJS Version: v12.14.1npm Version: 6.13.6 因为Hexo是基于Nodejs开发的，所以还需要配置如下环境才能正确运行： Nodejs npm 在这里强烈推荐大家使用NVM(Node version manager)来安装Node环境，方便之后的插件安装和管理。安装方式大家可以参考 这篇文章 安装好了Node和npm我们的环境准备工作就结束了下面就是Hexo的安装。 💿安装&amp;配置Hexo首先打开大家各自熟悉的命令行软件，直接在命令行里面敲下面的命令 1$ npm install -g hexo-cli 这里在国内安装的话，因为众所周知的原因安装时间可能会非常长。这里可以把npm的源替换为taobao的国内源。 1$ npm install -g mirror-config-china --registry=http://registry.npm.taobao.org 这个时候有可能会遇到报错，这个是因为npm没有root权限所导致。这里再次推荐大家参考 这篇文章 避免遇到这个问题 等在命令行安装完成Hexo-cli之后我们就可以真正开始初始化一个Hexo博客项目了。 首先在命令行定位到你想要Hexo文件保存的文件夹地址1$ cd YourProject Folder 初始化Hexo：1$ hexo init yourusername.github.io (yourusername替换为你的GitHub账号名) 这里如果在国内的话会再次遇到等待时间长的问题，这是因为众所周知的原因导致github连接速度限流了。 进入仓库目录，安装依赖包 12$ cd yourusername.github.io$ npm install 到这一步，hexo的框架的准备工作就已经做完了。如果现在想要新建一篇文章，输入如下命令 1$ hexo new \"New Page\" //(文件会保存在source/_posts目录下，之后可以直接访问目录下的文章进行编辑) 生成页面并本地预览你的博客: 12$ hexo g$ hexo s 到这里崭新的博客网站已经生成成功，大家打开浏览器输入 localhost:4000 就可以预览你的博客了。Hexo还提供了非常多主题可以选择，这里大家可以到 这里 挑选自己喜欢的主题下载安装。更换主题这里还有其他非常多的坑，这里也是搞了两天才让主题正确的运行起来。这些开源主题很多也是疏于更新，又加上网速实在感人，很多时候得直接从Github上面下载压缩包解压文件。但是这些主题在编写的时候还需要其他Hexo控件作为依赖包，这些还得不断调试浪费的很多时间。看来还是要学习一点前端的知识，之后如果想开发自己的主题的话也可以用得上。 发布到GitHub Pages在本地编辑完毕想要的内容之后就可以吧内容发布到GitHub Pages来作为个人网站了。 首先需要安装 hexo-deployer-git 来帮助快捷发布1$ npm install hexo-deployer-git --save 现在配置_config.yml文件，把yourusername替换为GitHub的用户名1234deploy: type: 'git' repo: git@github.com:yourusername/yourusername.github.io.git branch: master 最后清理项目，构建并发布123$ hexo clean$ hexo g$ hexo d 这里如果配置正确的话，基于Hexo的博客就已经生成了。现在可以到yourusername.github.io查看最终的效果了。 参考资料在这个过程中还是参考了很多网上的资料，这篇文章还是帮助比较大也比较详细的，可供参考。 unsplash-logoLauren Mancke","link":"/Hexo-Setup.html"},{"title":"如何正确配置Node.js和npm","text":"在安装和配置Hexo的时候经常会遇到EACCES报错。这篇文章通过安装nvm来解决这个报错的问题。 避免 npm install -g 报错相信大家在一开始使用npm的时候都会遇到一个问题。在需要-g (global全局安装)命令的时候，总是会遇到如下的报错信息： 1$ Error: EACCES: permission denied 求助了一下前端的同学这个是因为npm安装的时候没有root的权限导致的。当然获取root权限我们可以有很多办法来让他成功运行（sudo，修改权限），但是因为有些包我们不能确定他完全没有恶意代码在里面，直接给予root权限也是不安全的。 npm的官方网站对EACESS的问题解决方案也是推荐使用nvm来管理，但是教程给的信息又非常简短，中间还有很多坑。下面来指导大家如何安装nvm并避免EACESS报错产生。同时nvm作为一个包管理程序可以帮助前端工程师们更加便捷的使用不同的node环境来调试程序。 准备步骤在安装nvm的之前分两种情况： 已经通过brew，二进制文件，或者安装包安装了了Node.js环境的同学，请继续往下看这里。 电脑没有安装Node环境，那太棒了，直接跳到这里就可以。 电脑已经存在Node环境如果电脑中已经存在了通过安装包来安装Node环境的情况下，最好先整体删除现有的node环境以免之后nvm安装后也没有效果。Mac的用户先找到如下三个文件夹: 123/usr/local/include/node/usr/local/lib/node_modules/usr/local/bin/node 在依次删除这几个文件夹 123$ sudo rm -R /usr/local/include/node$ sudo rm -R /usr/local/lib/node_modules$ sudo rm -R /usr/local/bin/node 删除命令运行完毕之后可以用node -v 命令来确定node是否正确删除。报错的话就说明node环境已经从电脑中删除了。 12$ node -v$ # -bash: node: command not found 如果没有删除成功，其他的删除方式可以参考这里 下载安装nvm首先我们打开terminal输入下面两条任意一条指令： 12curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.2/install.sh | bash #curl请求方式 12wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.2/install.sh | bash#wget请求方式 这一步结束之后就可以验证是否安装成功了。输入下面的命令检测： 12$ command -v nvmnvm #如果输出nvm说明安装成功 如果上面成功输出nvm说明已经安装成功。报错的话请参考官方指南。 通过nvm安装node环境安装好nvm之后就可以安装node环境了，这里如果对环境没有特殊要求的话还是推荐安装官方的LTS版本，因为这个版本相对稳定，安装最新的版本可能会导致有些第三方的库支持不足。个人在安装Hexo的一些plugin的时候就会报错就是因为这个nodejs版本原因。 通过下面的命令可以安装想要的node版本： 1234$ nvm ls-remote #列出所有node版本$ nvm install XX.XX.XX #安装特定的版本$ nvm install --lts #根据官方文档可以安装 Node.js LTS 版本$ nvm install node #安装最新的node版本 到这里应该就可以正确使用npm install -g来安装第三方库了。这里可能还有别的坑，大家可以一起交流：","link":"/nvm.html"}],"tags":[{"name":"Hexo","slug":"Hexo","link":"/tags/Hexo/"},{"name":"Tutorial","slug":"Tutorial","link":"/tags/Tutorial/"},{"name":"个人博客设置","slug":"个人博客设置","link":"/tags/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E8%AE%BE%E7%BD%AE/"},{"name":"Nodejs","slug":"Nodejs","link":"/tags/Nodejs/"},{"name":"npm","slug":"npm","link":"/tags/npm/"},{"name":"nvm","slug":"nvm","link":"/tags/nvm/"}],"categories":[{"name":"Tutorial","slug":"Tutorial","link":"/categories/Tutorial/"},{"name":"Hexo","slug":"Tutorial/Hexo","link":"/categories/Tutorial/Hexo/"}]}