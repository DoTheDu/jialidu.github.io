<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>DoTheDu</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2021-06-14T15:51:44.479Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Charles Du</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hexo Tutorial 入门设置</title>
    <link href="http://yoursite.com/Hexo-Setup.html"/>
    <id>http://yoursite.com/Hexo-Setup.html</id>
    <published>2020-01-31T18:50:52.000Z</published>
    <updated>2021-06-14T15:51:44.479Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>2020年的新年真的亲身感受了渡日如“年”。在家憋了5天之后，任凭怎么下拉刷新也刷不出各个社交平台的新内容了🤣 既然闲着也是闲着，不如从头搭建一个静态个人博客吧！这里选择Hexo作为构建静态博客的框架来搭建。之前也尝试过Jekyll，但是感觉社区还有皮肤都没有Hexo丰富，不如就推倒重新搭建一套。</p><p>在尝试Hexo的搭建也踩了一些坑，这里也同时分享一下解决办法给大家参考一下😀</p><a id="more"></a><h3 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h3><p>这里我主要以我个人的环境来作为说明：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">MacOS</span><br><span class="line">NodeJS Version: v12.14.1</span><br><span class="line">npm Version: 6.13.6</span><br></pre></td></tr></table></figure><p>因为Hexo是基于Nodejs开发的，所以还需要配置如下环境才能正确运行：</p><ol><li>Nodejs</li><li>npm</li></ol><blockquote><p>在这里<strong>强烈推荐</strong>大家使用NVM(Node version manager)来安装Node环境，方便之后的插件安装和管理。<br>安装方式大家可以参考 <em><a href="/2020/02/01/nvm">这篇文章</a></em></p></blockquote><p>安装好了Node和npm我们的环境准备工作就结束了下面就是Hexo的安装。</p><h3 id="💿安装-amp-配置Hexo"><a href="#💿安装-amp-配置Hexo" class="headerlink" title="💿安装&amp;配置Hexo"></a>💿安装&amp;配置Hexo</h3><p>首先打开大家各自熟悉的命令行软件，直接在命令行里面敲下面的命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>这里在国内安装的话，因为众所周知的原因安装时间可能会非常长。这里可以把npm的源替换为taobao的国内源。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g mirror-config-china --registry=http://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><blockquote><p>这个时候有可能会遇到报错，这个是因为npm没有root权限所导致。<br>这里再次推荐大家参考 <em><a href="/2020/02/01/nvm">这篇文章</a></em> 避免遇到这个问题</p></blockquote><p>等在命令行安装完成Hexo-cli之后我们就可以真正开始初始化一个Hexo博客项目了。</p><ol><li>首先在命令行定位到你想要Hexo文件保存的文件夹地址<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> YourProject Folder</span><br></pre></td></tr></table></figure></li><li>初始化Hexo：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init yourusername.github.io (yourusername替换为你的GitHub账号名)</span><br></pre></td></tr></table></figure></li></ol><blockquote><p>这里如果在国内的话会再次遇到等待时间长的问题，这是因为众所周知的原因导致github连接速度限流了。</p></blockquote><ol start="3"><li><p>进入仓库目录，安装依赖包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> yourusername.github.io</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure></li><li><p>到这一步，hexo的框架的准备工作就已经做完了。如果现在想要新建一篇文章，输入如下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"New Page"</span> //(文件会保存在<span class="built_in">source</span>/_posts目录下，之后可以直接访问目录下的文章进行编辑)</span><br></pre></td></tr></table></figure></li><li><p>生成页面并本地预览你的博客:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g</span><br><span class="line">$ hexo s</span><br></pre></td></tr></table></figure></li></ol><p>到这里崭新的博客网站已经生成成功，大家打开浏览器输入 <a href="localhost:4000">localhost:4000</a> 就可以预览你的博客了。<br>Hexo还提供了非常多主题可以选择，这里大家可以到 <em><a href="https://hexo.io/themes/">这里</a></em> 挑选自己喜欢的主题下载安装。<br>更换主题这里还有其他非常多的坑，这里也是搞了两天才让主题正确的运行起来。这些开源主题很多也是疏于更新，又加上网速实在感人，很多时候得直接从Github上面下载压缩包解压文件。但是这些主题在编写的时候还需要其他Hexo控件作为依赖包，这些还得不断调试浪费的很多时间。看来还是要学习一点前端的知识，之后如果想开发自己的主题的话也可以用得上。</p><h3 id="发布到GitHub-Pages"><a href="#发布到GitHub-Pages" class="headerlink" title="发布到GitHub Pages"></a>发布到GitHub Pages</h3><p>在本地编辑完毕想要的内容之后就可以吧内容发布到GitHub Pages来作为个人网站了。</p><ol><li>首先需要安装 hexo-deployer-git 来帮助快捷发布<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></li><li>现在配置_config.yml文件，把yourusername替换为GitHub的用户名<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">    <span class="built_in">type</span>: <span class="string">'git'</span></span><br><span class="line">    repo: git@github.com:yourusername/yourusername.github.io.git </span><br><span class="line">    branch: master</span><br></pre></td></tr></table></figure></li><li>最后清理项目，构建并发布<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo g</span><br><span class="line">$ hexo d</span><br></pre></td></tr></table></figure></li></ol><p>这里如果配置正确的话，基于Hexo的博客就已经生成了。现在可以到yourusername.github.io查看最终的效果了。</p><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><p>在这个过程中还是参考了很多网上的资料，<a href="https://wistbean.github.io/build-personal-website.html#hexo%E5%8D%9A%E5%AE%A2%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0%EF%BC%8C%E6%89%93%E4%B8%8A%E6%A0%87%E7%AD%BE%E5%92%8C%E5%88%86%E7%B1%BB">这篇文章</a>还是帮助比较大也比较详细的，可供参考。</p><p><a style="background-color:black;color:white;text-decoration:none;padding:4px 6px;font-family:-apple-system, BlinkMacSystemFont, &quot;San Francisco&quot;, &quot;Helvetica Neue&quot;, Helvetica, Ubuntu, Roboto, Noto, &quot;Segoe UI&quot;, Arial, sans-serif;font-size:12px;font-weight:bold;line-height:1.2;display:inline-block;border-radius:3px" href="https://unsplash.com/@laurenmancke?utm_medium=referral&amp;utm_campaign=photographer-credit&amp;utm_content=creditBadge" target="_blank" rel="noopener noreferrer" title="Download free do whatever you want high-resolution photos from Lauren Mancke"><span style="display:inline-block;padding:2px 3px"><svg xmlns="http://www.w3.org/2000/svg" style="height:12px;width:auto;position:relative;vertical-align:middle;top:-2px;fill:white" viewBox="0 0 32 32"><title>unsplash-logo</title><path d="M10 9V0h12v9H10zm12 5h10v18H0V14h10v9h12v-9z"></path></svg></span><span style="display:inline-block;padding:2px 3px">Lauren Mancke</span></a></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;2020年的新年真的亲身感受了渡日如“年”。在家憋了5天之后，任凭怎么下拉刷新也刷不出各个社交平台的新内容了🤣 既然闲着也是闲着，不如从头搭建一个静态个人博客吧！这里选择Hexo作为构建静态博客的框架来搭建。之前也尝试过Jekyll，但是感觉社区还有皮肤都没有Hexo丰富，不如就推倒重新搭建一套。&lt;/p&gt;
&lt;p&gt;在尝试Hexo的搭建也踩了一些坑，这里也同时分享一下解决办法给大家参考一下😀&lt;/p&gt;
    
    </summary>
    
    
      <category term="Tutorial" scheme="http://yoursite.com/categories/Tutorial/"/>
    
      <category term="Hexo" scheme="http://yoursite.com/categories/Tutorial/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
      <category term="Tutorial" scheme="http://yoursite.com/tags/Tutorial/"/>
    
      <category term="个人博客设置" scheme="http://yoursite.com/tags/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E8%AE%BE%E7%BD%AE/"/>
    
  </entry>
  
  <entry>
    <title>如何正确配置Node.js和npm</title>
    <link href="http://yoursite.com/nvm.html"/>
    <id>http://yoursite.com/nvm.html</id>
    <published>2020-01-29T18:50:52.000Z</published>
    <updated>2020-02-11T15:31:15.240Z</updated>
    
    <content type="html"><![CDATA[<p>在安装和配置Hexo的时候经常会遇到EACCES报错。这篇文章通过安装nvm来解决这个报错的问题。</p><a id="more"></a><h3 id="避免-npm-install-g-报错"><a href="#避免-npm-install-g-报错" class="headerlink" title="避免 npm install -g 报错"></a>避免 npm install -g 报错</h3><p>相信大家在一开始使用npm的时候都会遇到一个问题。在需要-g (global全局安装)命令的时候，总是会遇到如下的报错信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ Error: EACCES: permission denied</span><br></pre></td></tr></table></figure><p>求助了一下前端的同学这个是因为npm安装的时候没有root的权限导致的。当然获取root权限我们可以有很多办法来让他成功运行（sudo，修改权限），但是因为有些包我们不能确定他完全没有恶意代码在里面，直接给予root权限也是不安全的。</p><p>npm的官方网站对EACESS的问题<a href="https://docs.npmjs.com/resolving-eacces-permissions-errors-when-installing-packages-globally">解决方案</a>也是推荐使用nvm来管理，但是教程给的信息又非常简短，中间还有很多坑。下面来指导大家如何安装nvm并避免EACESS报错产生。同时nvm作为一个包管理程序可以帮助前端工程师们更加便捷的使用不同的node环境来调试程序。</p><h3 id="准备步骤"><a href="#准备步骤" class="headerlink" title="准备步骤"></a>准备步骤</h3><p>在安装nvm的之前分两种情况：</p><ol><li>已经通过brew，二进制文件，或者安装包安装了了Node.js环境的同学，请继续往下看<a href="#%e7%94%b5%e8%84%91%e5%b7%b2%e7%bb%8f%e5%ad%98%e5%9c%a8node%e7%8e%af%e5%a2%83">这里</a>。</li><li>电脑没有安装Node环境，那太棒了，直接<a href="#%e4%b8%8b%e8%bd%bd%e5%ae%89%e8%a3%85nvm">跳到这里</a>就可以。</li></ol><br><h4 id="电脑已经存在Node环境"><a href="#电脑已经存在Node环境" class="headerlink" title="电脑已经存在Node环境"></a>电脑已经存在Node环境</h4><p>如果电脑中已经存在了通过安装包来安装Node环境的情况下，最好先整体删除现有的node环境以免之后nvm安装后也没有效果。<br>Mac的用户先找到如下三个文件夹:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/usr/<span class="built_in">local</span>/include/node</span><br><span class="line">/usr/<span class="built_in">local</span>/lib/node_modules</span><br><span class="line">/usr/<span class="built_in">local</span>/bin/node</span><br></pre></td></tr></table></figure><p>在依次删除这几个文件夹</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ sudo rm -R /usr/<span class="built_in">local</span>/include/node</span><br><span class="line">$ sudo rm -R /usr/<span class="built_in">local</span>/lib/node_modules</span><br><span class="line">$ sudo rm -R /usr/<span class="built_in">local</span>/bin/node</span><br></pre></td></tr></table></figure><p>删除命令运行完毕之后可以用node -v 命令来确定node是否正确删除。报错的话就说明node环境已经从电脑中删除了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ node -v</span><br><span class="line">$ <span class="comment"># -bash: node: command not found</span></span><br></pre></td></tr></table></figure><blockquote><p>如果没有删除成功，其他的删除方式可以参考<a href="https://stackoverflow.com/questions/11177954/how-do-i-completely-uninstall-node-js-and-reinstall-from-beginning-mac-os-x">这里</a></p></blockquote><h4 id="下载安装nvm"><a href="#下载安装nvm" class="headerlink" title="下载安装nvm"></a>下载安装nvm</h4><p>首先我们打开terminal输入下面两条任意一条指令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.2/install.sh | bash </span><br><span class="line"><span class="comment">#curl请求方式</span></span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.2/install.sh | bash</span><br><span class="line"><span class="comment">#wget请求方式</span></span><br></pre></td></tr></table></figure><p>这一步结束之后就可以验证是否安装成功了。输入下面的命令检测：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">command</span> -v nvm</span><br><span class="line">nvm <span class="comment">#如果输出nvm说明安装成功</span></span><br></pre></td></tr></table></figure><p>如果上面成功输出nvm说明已经安装成功。<br>报错的话请<a href="https://github.com/nvm-sh/nvm#troubleshooting-on-macos">参考官方指南</a>。<br><br></p><h3 id="通过nvm安装node环境"><a href="#通过nvm安装node环境" class="headerlink" title="通过nvm安装node环境"></a>通过nvm安装node环境</h3><p>安装好nvm之后就可以安装node环境了，这里如果对环境没有特殊要求的话还是推荐安装官方的LTS版本，因为这个版本相对稳定，安装最新的版本可能会导致有些第三方的库支持不足。个人在安装Hexo的一些plugin的时候就会报错就是因为这个nodejs版本原因。</p><p>通过下面的命令可以安装想要的node版本：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ nvm ls-remote <span class="comment">#列出所有node版本</span></span><br><span class="line">$ nvm install XX.XX.XX <span class="comment">#安装特定的版本</span></span><br><span class="line">$ nvm install --lts <span class="comment">#根据官方文档可以安装 Node.js LTS 版本</span></span><br><span class="line">$ nvm install node <span class="comment">#安装最新的node版本</span></span><br></pre></td></tr></table></figure><iframe src="//music.163.com/outchain/player?type=2&id=1397495736&auto=1&height=66" width="100%" height="300" frameborder="0" loading="lazy" allowfullscreen></iframe><p>到这里应该就可以正确使用npm install -g来安装第三方库了。这里可能还有别的坑，大家可以一起交流：</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在安装和配置Hexo的时候经常会遇到EACCES报错。这篇文章通过安装nvm来解决这个报错的问题。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Tutorial" scheme="http://yoursite.com/tags/Tutorial/"/>
    
      <category term="Nodejs" scheme="http://yoursite.com/tags/Nodejs/"/>
    
      <category term="npm" scheme="http://yoursite.com/tags/npm/"/>
    
      <category term="nvm" scheme="http://yoursite.com/tags/nvm/"/>
    
  </entry>
  
</feed>
